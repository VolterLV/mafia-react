// Подключение миксинов ===========================================================================================================================================================================================================================================================================

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин

// Подключить если есть локальные файлы шрифтов
//@import 'fonts/fonts';
@import url('https://fonts.googleapis.com/css?family=Roboto:300,500,700,800&display=swap');
@import url('https://fonts.googleapis.com/css?family=Macondo:regular&display=swap');
@import url('https://fonts.googleapis.com/css?family=Lobster:regular');

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
//@import "fonts/icons";

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================

// Основные цвета
$mainColor: #000; // Цвет шрифта по умолчанию

// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1170;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em(
	$containerWidth
); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: 991.98px; // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: 767.98px; // Телефоны L
$mobileSmall: 479.98px; // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================

body {
	background: #000;
	font-family: 'Lobster';
	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
	}
	// Сайт загружен
	.loaded & {
	}
}
// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;
	// Прижимаем footer
	> main {
		flex: 1 1 auto;
	}
	// Фикс для слайдеров
	> * {
		min-width: 0;
	}
}
// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {
	// Отзывчивая
	[class*='__container'] {
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
			margin: 0 auto;
		}
		@if ($containerPadding>0) {
			/* 	padding: 0 rem(math.div($containerPadding, 2)); */
		}
	}
} @else {
	// По брейк-поинтам
	[class*='__container'] {
		margin: 0 auto;
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
		} @else {
			@if ($containerPadding>0) {
				/* 	padding: 0 rem(math.div($containerPadding, 2)); */
			}
		}
		@media (max-width: $pc) {
			max-width: rem(970);
		}
		@media (max-width: $tablet) {
			max-width: rem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}

// Общий файл элементов форм
// Для подключения/отключения стилей конкретного єлемента формы смотри base/forms/forms.scss

// Стили попапов
// @import "base/popup";

// Стили спойлеров
// @import "base/spollers";

// Стили табов
// @import "base/tabs";

// Стили карт
// @import "base/maps";

// Стили блока "показать еще"
// @import "base/showmore";

// Стили для полноэкранного блока
// @import "base/fullscreen";

// Стили для липкого блока
// @import "base/sticky";

// Стили для отзывчивых картинок (IBG)
// Сниппет (HTML): ibg (div c картинкой и классами)
// Сниппет (HTML): ibga (a c картинкой и классами)
[class*='-ibg'] {
	position: relative;
	img {
		position: absolute;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		object-fit: cover;
	}
}
[class*='-ibg_contain'] {
	img {
		object-fit: contain;
	}
}

// Шаблоны (заготовки)
// @extend %имя шаблона;
// Сниппет (SCSS): ex

// Счетчик для списка
%listCounter {
	list-style-type: none;
	counter-reset: item;
	li {
		position: relative;
		&:before {
			counter-increment: item;
			content: counter(item);
			position: absolute;
			left: 0;
			top: 0;
		}
	}
}
// Адаптивное видео
%responsiveVideo {
	position: relative;
	overflow: hidden;
	height: 0;
	padding-bottom: 56.25%;
	video,
	iframe,
	object,
	embed {
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}
}
// Видео в качестве фона
%videoBackground {
	video,
	iframe,
	object,
	embed {
		position: fixed;
		top: 50%;
		left: 50%;
		min-width: 100%;
		min-height: 100%;
		width: auto;
		height: auto;
		z-index: -100;
		transform: translateX(-50%) translateY(-50%);
		background-size: cover;
	}
}
// Серый фильтр
%grayfilter {
	transition: all 0.3s ease 0s;
	filter: grayscale(1);
	@media (any-hover: hover) {
		&:hover {
			filter: grayscale(0);
		}
	}
}
// Отменить выделение
%noselect {
	user-select: none;
}
// Зеркальное отображение
%mirror {
	transform: scale(-1, 1);
}
// Плавный скролл
%smoothscroll {
	-webkit-overflow-scrolling: touch;
}
// Скрыть скролл
%hidescroll {
	&::-webkit-scrollbar {
		display: none;
	}
}
// Заголовки, общие БЄМ блоки и проче...
.main-button {
	display: inline-block;
	margin: 0px 10px 0px 10px;
	position: relative;
	padding: 20px 20px 20px 20px;
	width: 300px;
	border-radius: 2px;
	font-size: 2rem;
	line-height: 18px;
	text-align: center;
	color: #ffffff;
	cursor: pointer;
	@media (max-width: $tablet) {
		font-size: 1.5rem;
		margin: 10px 0px 0px 0px;
	}
	@media (max-width: $mobile) {
	}
	/* 	margin: 5px;
	padding: 10px 10px 10px 10px;
	width: 300px;
	background: #111b47;
	border-radius: 2px;
	font-size: 2rem;
	line-height: 18px;
	text-align: center;
	color: #ffffff;
	cursor: pointer;
	transition: all 0.3s ease 0s;
	@media (any-hover: hover) {
		&:hover {
			background: #1e3289;
		}
	}
	@media (max-width: $tablet) {
		font-size: 1.5rem;
	}
	@media (max-width: $mobile) {
	}
 */

	/* 	position: relative;
	display: inline-block;
	padding: 15px 30px;
	border: 2px solid #111;
	text-transform: uppercase;
	background-color: #fff;
	color: #111;
	text-decoration: none;
	font-weight: 600;
	font-size: 20px;
	&::before {
		content: '';
		position: absolute;
		top: 6px;
		left: -2px;
		width: calc(100% + 4px);
		height: calc(100% - 12px);
		background: #fff;
		transition: 0.5s ease-in-out;
		transform: scaleY(1);
		transition-delay: 0.5s;
	}
	&:hover::before {
		transform: scaleY(0);
	}
	&::after {
		content: '';
		position: absolute;
		left: 6px;
		top: -2px;
		height: calc(100% + 4px);
		width: calc(100% - 12px);
		background: #fff;
		transition: 0.5s ease-in-out;
		transform: scaleX(1);
	}
	&:hover::after {
		transform: scaleX(0);
	}
	span {
		position: relative;
		z-index: 3;
	} */

	&::before,
	&::after {
		content: '';
		border: 3px solid #fff;
		position: absolute;
		width: calc(100% - 6px);
		height: calc(100% - 6px);
		left: 0;
		bottom: 0;
		z-index: -1;
		transition: transform 0.3s ease;
	}
	&:hover::after {
		transform: translate(-5px, -5px);
	}
	&:hover::before {
		transform: translate(5px, 5px);
	}
	@media (max-width: $mobile) {
		margin: 0px 0px 8px 0px;
	}
}

.main-title {
	margin: 0px 0px 16px 0px;
	font-weight: 500;

	line-height: 48px;
	color: #091133;
	transform: translate(0px, 200px);
	opacity: 0;
	transition: all 0.7s ease 0s;
	animation: name 4s infinite linear;
	&._active {
		transform: translate(0px, 0px);
		opacity: 1;
	}
	@media (max-width: $pc) {
		font-size: 36px;
	}
	@media (max-width: $tablet) {
		font-size: 25px;
	}
	@media (max-width: $mobile) {
		font-size: 20px;
	}
}
